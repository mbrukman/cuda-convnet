#summary The types of neurons (hidden unit nonlinearities) supported by the net.

= Neuron types =

Some of the [LayerParams layer types] take a `neuron=x` parameter, which defines the output nonlinearity of neurons in the layer. 

These are the supported neuron types:

  * `neuron=logistic` -- the logistic neuron. This computes the function http://cuda-convnet.googlecode.com/svn/wiki/images/logistic.gif
  * `neuron=tanh[a,b]` -- the hyperbolic tangent neuron. This computes the function http://cuda-convnet.googlecode.com/svn/wiki/images/tanh.gif
  * `neuron=abstanh[a,b]` -- the absolute value of hyperbolic tangent neuron. This computes the function http://cuda-convnet.googlecode.com/svn/wiki/images/abstanh.gif
  * `neuron=relu` -- the rectified linear neuron. This computes the function http://cuda-convnet.googlecode.com/svn/wiki/images/relu.gif
  * `neuron=brelu[a]` -- the bounded rectified linear neuron. This computes the function http://cuda-convnet.googlecode.com/svn/wiki/images/brelu.gif
  * `neuron=softrelu` -- the soft rectified linear neuron. This computes the function http://cuda-convnet.googlecode.com/svn/wiki/images/softrelu.gif
  * `neuron=abs` -- the absolute value neuron. This computes the function http://cuda-convnet.googlecode.com/svn/wiki/images/abs.gif
  * `neuron=ident` -- the identity neuron. This computes the function http://cuda-convnet.googlecode.com/svn/wiki/images/ident.gif

Adding new types of neurons is *extremely* easy. See [http://code.google.com/p/cuda-convnet/source/browse/trunk/include/neuron.cuh neuron.cuh] for reference.